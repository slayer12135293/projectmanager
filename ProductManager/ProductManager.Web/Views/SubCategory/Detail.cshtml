@model ProductManager.Enity.SubCategory

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    
}
<h2>@Model.Name </h2>

@*<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Category</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>

            <p>
                <input type="submit" value="Save changes" />
            </p>
        </fieldset>
    }
</div>*@

<section ng-controller="ProductListController">
    <input type="hidden" id="subCategoryId" value="@Model.Id"/>
    
    {{allProducts}}
    

    <section class="row">
        <section class="col-md-12">
            <table ng-table="tableParams" show-filter="true" class="table">
                <tr ng-repeat="product in $data">
                    <td data-title="'Name'" sortable="'Name'" filter="{ 'Name': 'text' }">
                        {{product.Name}}
                    </td>
                    <td data-title="'ColorName'" sortable="'ColorName'" filter="{ 'ColorName': 'text' }">
                        {{product.ColorName}}
                    </td>
                </tr>
            </table>

        </section>
    </section>



    <ul>
        @if (Model.Products != null)
        {
            foreach (var product in Model.Products)
            {
                <li>@product.Id  ------ @product.Name </li>
                @Html.ActionLink("Delete", "Delete", "Product", new { categoryId = ViewData["catagoryId"], subCategoryId = Model.Id, productId = product.Id }, null)
                <br />
                @Html.ActionLink("Edit", "Edit", "Product", new { categoryId = ViewData["catagoryId"], subCategoryId = Model.Id, productId = product.Id }, null)


            }
        }

        @Html.Partial("ProductListView", @Model.Products)



    </ul>
    <div>
        @Html.ActionLink("Add a product", "Create", "Product", new { categoryId = ViewData["catagoryId"], subCategoryId = Model.Id }, null)
    </div>





</section>

