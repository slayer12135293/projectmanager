@model ProductManager.Enity.PricePlanDetailsViewModel
@using System.Linq
@using System.Security.Principal

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Price Plan Detail </h2>
<hr />
<div>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.PricePlan.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PricePlan.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PricePlan.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PricePlan.Description)
        </dd>
    </dl>
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PricePlan.Id)

        <div class="form-group col-md-4 ">
            @Html.LabelFor(model => model.PriceUnitViewModel.Width, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceUnitViewModel.Width, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceUnitViewModel.Width, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.PriceUnitViewModel.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceUnitViewModel.Height, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.PriceUnitViewModel.Height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.PriceUnitViewModel.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceUnitViewModel.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceUnitViewModel.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10">
            <input type="submit" value="Add a price unit" class="btn btn-primary" />
        </div>
    </div>

}


<section class="row">
    <section class="col-md-12">
        <table>
            @{
                var distinctWiths = Model.PriceUnitViewModels.OrderBy(y => y.Width).Select(x => x.Width).Distinct();
                var distinctHeight = Model.PriceUnitViewModels.OrderBy(y => y.Height).Select(x => x.Height).Distinct();
            }

            <tr>
                <th> column: Width <br/> row: height</th>
                @foreach (var with in distinctWiths)
                {
                    <th>@with</th>
                }
            </tr>
            @foreach (var height in distinctHeight)
            {
                <tr>
                    <td>@height</td>
                    @foreach (var priceUnit in Model.PriceUnitViewModels)
                    {
                        if (priceUnit.Height == height)
                        {
                            <td> @priceUnit.Price </td>
                        }
                        else
                        {
                            <td></td>
                        } 
                        

                    }

                </tr>
            }
        </table>


        <ul>
            @foreach (var item in Model.PriceUnitViewModels)
            {
                <li>Width:@item.Width  ------ height:@item.Height  ------- Price: @item.Price   </li>
            }
        </ul>
        

    </section>
</section>





<p class='row col-md-12'>
    @Html.ActionLink("Edit", "Edit", new { id = Model.PricePlan.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
