@using System.Globalization
@model IEnumerable<ProductManager.Web.ViewModels.PriceUnitViewModel>

<table class="table">
    @{
        var distinctWiths = Model.OrderBy(y => y.Width).Select(x => x.Width).Distinct().ToList();
        var distinctHeight = Model.OrderBy(y => y.Height).Select(x => x.Height).Distinct().ToList();
    }
    
    @if (Model.Any())
    {
        <tr>
            <th></th>
            <th colspan="@(distinctWiths.Count+1)" class="center_text"> Bredd (cm)</th>
        </tr>

    }

    <tr>
        <th></th>
        <th></th>
        @foreach (var headerWith in distinctWiths)
        {
            <th>@headerWith</th>
        }
    </tr>

    @foreach (var height in distinctHeight)
    {
        <tr>
            <td><b>Höjd</b> (cm)</td>
            <td><b>@height</b></td>

            @foreach (int itemWidth in distinctWiths)
            {
                <td>
                    @foreach (var priceUnit in Model)
                    {

                        if (priceUnit.Height == height && priceUnit.Width == itemWidth)
                        {
                            <span class="bg-primary context_m">
                                @priceUnit.Price
                            </span>
                        }
                    }

                </td>
            }

        </tr>
    }
</table>
