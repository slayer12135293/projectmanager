@model ProductManager.Web.ViewModels.CreateProductViewModel
@{
    ViewBag.Title = "Create product";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Product</h2>
<hr />
<section class="row" ng-controller="CreateProductController">
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                <section class="validation-textbox-message">
                    @Html.ValidationMessageFor(model => model.Name)
                </section>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ProductCode)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                <section class="validation-textbox-message">
                    @Html.ValidationMessageFor(model => model.ProductCode)
                </section>
            </div>


            <div class="editor-label">
                @Html.LabelFor(model => model.Height)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                <section class="validation-textbox-message">
                    @Html.ValidationMessageFor(model => model.Height)
                </section>
            </div>


            <div class="editor-label">
                @Html.LabelFor(model => model.Width)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                <section class="validation-textbox-message">
                    @Html.ValidationMessageFor(model => model.Width)
                </section>
            </div>


            <div class="editor-label">
                @Html.LabelFor(model => model.ColoCode)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ColoCode, new { htmlAttributes = new { @class = "form-control" } })
                <section class="validation-textbox-message">
                    @Html.ValidationMessageFor(model => model.ColoCode)
                </section>
            </div>



            <div class="editor-label">
                @Html.LabelFor(model => model.ColorName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ColorName, new { htmlAttributes = new { @class = "form-control" } })
                <section class="validation-textbox-message">
                    @Html.ValidationMessageFor(model => model.ColorName)
                </section>
            </div>



            <div class="editor-label">
                @Html.LabelFor(model => model.ProductTypeId)
            </div>
            <div class="editor-field">
                <select class="validation-textbox-message" ng-model="ngProductType" name="ProductTypeId" ng-change="ProductTypeChange()">
                    @foreach (var type in Model.ProductTypeViewModels)
                    {
                        <option value="@type.Id"> @type.Name</option>
                    }
                </select>
            </div>
            
            <div class="editor-label">
                @Html.LabelFor(model => model.PricePlanId)
            </div>
            <div class="editor-field">
                <select class="form-control" ng-model="ngPricePlan" name="PricePlanId" data-ng-options="c.Id as c.Name for c in priceplans"></select>
            </div>
            



            <div class="editor-label">
                @Html.LabelFor(model => model.IsNewProduct)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IsNewProduct)
                <section class="validation-textbox-message">
                    @Html.ValidationMessageFor(model => model.IsNewProduct)
                </section>
            </div>
            @Html.HiddenFor(model => model.SubCategoryId)

            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>

    }
</section>


<p>
    @Html.ActionLink("Back to List", "Index")
</p>
